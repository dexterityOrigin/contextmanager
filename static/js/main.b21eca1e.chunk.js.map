{"version":3,"sources":["Context.js","components/Contacts/Contact.js","components/Contacts/Contacts.js","components/Layout/Header.js","components/Layout/TextInputGroup.js","components/Contacts/AddContact.js","components/Pages/About.js","components/Pages/NotFound.js","components/test/Test.js","components/Contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","react_router_dom","to","marginRight","Contacts","Fragment","Contacts_Contact","Header","branding","href","defaultProps","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","console","log","post","abrupt","history","push","defineProperty","target","_this$state2","Layout_TextInputGroup","About","NotFound","Test","title","body","fetch","then","response","json","EditContact","updContact","match","params","put","App","Context_Provider","Layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b21eca1e.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer=(state,action)=>{\r\n    switch(action.type){\r\n\r\n        case 'DELETE_CONTACT':\r\n            return{\r\n                ...state,\r\n                contacts: state.contacts.filter(contact=>\r\n                    contact.id !== action.payload)\r\n            };\r\n            case 'ADD_CONTACT':\r\n                return{\r\n                    ...state,\r\n                    contacts: [action.payload, ...state.contacts]\r\n                };\r\n            case 'UPDATE_CONTACT':\r\n                return{\r\n                    ...state,\r\n                    contacts:state.contacts.map(contact => \r\n                        contact.id === action.payload.id ? (contact\r\n                            = action.payload) : contact)// PUT REQUEST_UPDATE ACTION\r\n                };\r\n            default:\r\n                return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    state={\r\n        contacts:[\r\n            \r\n        ],\r\n        dispatch: action =>\r\n            this.setState(state => reducer(state,action))\r\n        \r\n    };\r\n\r\n    async componentDidMount(){ //assynchronous \r\n        const res = await axios\r\n           .get('http://jsonplaceholder.typicode.com/users');\r\n\r\n           this.setState({contacts:res.data});\r\n           \r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <Context.Provider \r\n            value={this.state}\r\n            \r\n            >{this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react';\r\nimport Proptypes from 'prop-types';\r\nimport {Consumer} from '../../Context';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nclass Contact extends Component {\r\n    state={\r\n        showContactInfo: false\r\n    };\r\n    onDeleteClick= async (id,dispatch)=>{\r\n       \r\n        await  axios.delete(`http://jsonplaceholder.typicode.com/users/${id}`);\r\n       \r\n        dispatch({type:'DELETE_CONTACT',payload:id})\r\n    };\r\n    \r\n    render() {\r\n        const {id,name,email,phone} = this.props.contact;\r\n        const{showContactInfo}=this.state;\r\n\r\n\r\n        return (\r\n\r\n            <Consumer>\r\n                {value=>{\r\n                    const {dispatch} = value;\r\n                    return(\r\n                        <div className=\"card card-body mb-3\">\r\n                        <h4>\r\n                        {name}{''}\r\n                            <i onClick={()=> this.setState({showContactInfo:!this.state.showContactInfo})}\r\n                            //toggles \r\n                            className=\"fas fa-sort-down\"\r\n                            style={{cursor: 'pointer'}}\r\n                            />\r\n                            <i\r\n                                className=\"fas fa-times\" \r\n                                style={{\r\n                                    cursor:'pointer',float:'right',color:'red'\r\n                                }}\r\n                                onClick={this.onDeleteClick.bind(\r\n                                    this,id,dispatch\r\n                                )}\r\n                            />\r\n                            <Link to={`contact/edit/${id}`}>\r\n                                <i className=\"fas fa-pencil-alt\"\r\n                                style={{\r\n                                    cursor:'pointer',\r\n                                    float:'right',\r\n                                    color:'black',\r\n                                    marginRight:'1rem'\r\n                                }}\r\n                                />\r\n                            </Link>\r\n                          </h4>\r\n                        {showContactInfo ? (\r\n                            <ul>\r\n                            <li className=\"list-group-item\">Email:{email}</li>\r\n                            <li className=\"list-group-item\">Phone :{phone}</li>\r\n                        </ul>\r\n                        ):null}\r\n                        \r\n                    </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n            \r\n           \r\n        );\r\n    }\r\n}\r\nContact.propTypes = {\r\n    contact: Proptypes.object.isRequired,\r\n    \r\n   \r\n}\r\nexport default Contact;\r\n","import React, { Component } from 'react'\r\nimport Contact from './Contact';\r\nimport {Consumer} from '../../Context';\r\nclass Contacts extends Component {\r\n    \r\n        \r\n    \r\n    render() {\r\n\r\n        return(\r\n            <Consumer>\r\n                {value=>{\r\n                    const {contacts}=value;\r\n                    return(\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-2\">\r\n                                <span className=\"text-danger\">Contact List</span>\r\n                            </h1>\r\n                        {contacts.map(contact => (\r\n                            <Contact \r\n                             key={contact.id}\r\n                             contact={contact}\r\n                            />\r\n                        ))} \r\n                     </React.Fragment>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n\r\n\r\n       \r\n    }\r\n}\r\nexport default Contacts;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\nconst Header=(props)=>{\r\n\r\n        const {branding} = props;\r\n\r\n    return(\r\n       \r\n       <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n           <div className=\"container\">\r\n                <a href=\"/\" className=\"navbar-brand\">\r\n                        {branding}\r\n                    </a>\r\n                    <div>\r\n                        <ul className=\"navbar-nav mr-auto\">\r\n                            <li className=\"nav-item\">\r\n                               <Link to=\"/\" className=\"nav-link\" >\r\n                                    <i className=\"fas fa-home\"></i> Home \r\n                                   \r\n                               </Link>\r\n\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                               <Link to=\"/contact/add\" className=\"nav-link\" >\r\n                               <i className=\"fas fa-plus\"></i>  Add\r\n                               </Link>\r\n\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                               <Link to=\"/about\" className=\"nav-link\" >\r\n                               <i className=\"fas fa-question\"></i>  About\r\n                               </Link>\r\n\r\n                            </li>\r\n                        </ul>\r\n                </div>\r\n           </div>\r\n       </nav>\r\n       \r\n    );\r\n\r\n}\r\nHeader.defaultProps ={\r\n    branding:'My App'\r\n}\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n};\r\n\r\n\r\nexport default Header;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup=({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n\r\n})=> {\r\n    return (\r\n        <div className=\"form-group\">\r\n        <label htmlFor={name}>{label}</label>\r\n        <input\r\n         type={type}\r\n        name={name}\r\n        className={classnames('form-control form-control-lg',{\r\n            'is-invalid':error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n        >\r\n        </input>\r\n        {error &&  <div className=\"invalid-feedback\">\r\n        {error}\r\n        </div>}\r\n       \r\n    </div>\r\n    \r\n        \r\n    );\r\n}\r\nTextInputGroup.propTypes={\r\n    label:PropTypes.string.isRequired,\r\n    name:PropTypes.string.isRequired,\r\n    placeholder:PropTypes.string.isRequired,\r\n    value:PropTypes.string.isRequired,\r\n    type:PropTypes.string.isRequired,\r\n    onChange:PropTypes.func.isRequired,\r\n    error:PropTypes.string\r\n}\r\nTextInputGroup.defaultProps={\r\n    type:'text'\r\n}\r\nexport default TextInputGroup;","import React, { Component } from 'react'\r\nimport {Consumer} from '../../Context';\r\nimport TextInputGroup from '../Layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\n\r\nclass AddContact extends Component {\r\n    state ={\r\n        name:'',\r\n        email:'',\r\n        phone:'',\r\n        errors:{}\r\n\r\n    };\r\n\r\n    onSubmit= async (dispatch,e)=>{ //onsubmit method\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n\r\n        const {name,email,phone} = this.state;\r\n\r\n        const newContact={\r\n            \r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n\r\n        const res = await axios.post('http://jsonplaceholder.typicode.com/users',newContact);\r\n        dispatch({type:'ADD_CONTACT', payload:res.data})\r\n            \r\n         //check errors\r\n       if(name===''){\r\n        this.setState({errors:{\r\n            name:'Name is required'\r\n        }});\r\n        return;\r\n    }\r\n     if(email ===''){\r\n         this.setState({errors:{\r\n             email:'Email is required'\r\n         }});\r\n         return;\r\n     }\r\n     if(phone ===''){\r\n         this.setState({errors:{\r\n             phone:'Phone is required'\r\n         }});\r\n         return;\r\n     }\r\n\r\n\r\n       \r\n        this.setState({ //clear state\r\n            name:'',\r\n            email:'',\r\n            phone:'',\r\n            errors:{}\r\n        });\r\n        this.props.history.push('/'); //redirect\r\n    };\r\n\r\n    onChange =(e)=> this.setState({[e.target.name]:\r\n        e.target.value});//getter\r\n\r\n    render() {\r\n        \r\n        const {name,email,phone,errors}=this.state;\r\n\r\n       \r\n        return(\r\n            <Consumer>\r\n                {value=>{\r\n                    const {dispatch} = value;\r\n                    return (\r\n                        \r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">\r\n                                Add Contact\r\n                            </div>\r\n                                <div className=\"card-body\">\r\n                                    <form onSubmit={this.onSubmit.bind(this,dispatch)}>\r\n                                        <TextInputGroup \r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"Enter Name\"\r\n                                        value={name}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.name}\r\n                                        />\r\n                                       \r\n                                         <TextInputGroup \r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        type=\"email\"\r\n                                        placeholder=\"Enter Email\"\r\n                                        value={email}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.email}\r\n                                        />\r\n                                         <TextInputGroup \r\n                                        label=\"Phone\"\r\n                                        name=\"phone\"\r\n                                        placeholder=\"Enter Phone\"\r\n                                        value={phone}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.phone}\r\n                                        />\r\n\r\n                                        \r\n                                        <input type=\"submit\"\r\n                                        value=\"Add Contact\"\r\n                                        className=\"btn btn-success btn-block\"></input>\r\n\r\n                                        \r\n                                    </form>\r\n                                </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n\r\n\r\n        \r\n    }\r\n}\r\n\r\nexport default  AddContact;","import React from 'react'\r\n\r\nexport default function About() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">About Contact Manager</h1>\r\n            <p className=\"lead\">Simple app to manage</p>\r\n            <p className=\"text-secondary\">Version 1.0.0</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default ()=> {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">\r\n                <span className=\"text-danger\">404 Page not Found</span>\r\n                </h1>\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React, { Component } from 'react'\r\n\r\nclass Test extends Component {\r\n\r\n    state={\r\n        title:'',\r\n        body:''\r\n\r\n    };\r\n\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/todos/1')\r\n        .then(response => response.json())\r\n        .then(data => this.setState(\r\n           {\r\n            title:data.title,\r\n            body:data.body\r\n           }\r\n\r\n        ));\r\n    }\r\n    \r\n    render() {\r\n        const {title,body}=this.state;\r\n\r\n        return (\r\n            <div>\r\n                <h1>{title}</h1>\r\n                <p>{body}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Test;\r\n\r\n/**\r\n * componentwillmount make http call,fetching data from component\r\n * call initial request\r\n * \r\n */","import React, { Component } from 'react'\r\nimport {Consumer} from '../../Context';\r\nimport TextInputGroup from '../Layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\n\r\nclass EditContact extends Component {\r\n    state ={\r\n        name:'',\r\n        email:'',\r\n        phone:'',\r\n        errors:{}\r\n\r\n    };\r\n    async componentDidMount(){\r\n        const {id} = this.props.match.params;\r\n        const res = await axios.get(`http://jsonplaceholder.typicode.com/users/${id}`);\r\n        \r\n        const contact = res.data;\r\n\r\n        this.setState({\r\n            name:contact.name,\r\n            email:contact.email,\r\n            phone:contact.phone\r\n        });\r\n    }\r\n\r\n    onSubmit= async (dispatch,e)=>{ //onsubmit method\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n\r\n        const {name,email,phone} = this.state;\r\n\r\n       \r\n            \r\n         //check errors\r\n       if(name===''){\r\n        this.setState({errors:{\r\n            name:'Name is required'\r\n        }});\r\n        return;\r\n    }\r\n     if(email ===''){\r\n         this.setState({errors:{\r\n             email:'Email is required'\r\n         }});\r\n         return;\r\n     }\r\n     if(phone ===''){\r\n         this.setState({errors:{\r\n             phone:'Phone is required'\r\n         }});\r\n         return;\r\n     }\r\n\r\n     const updContact ={\r\n         name,\r\n         email,\r\n         phone\r\n     };\r\n\r\n     const{id}=this.props.match.params;\r\n\r\n     const res = await axios.put(`http://jsonplaceholder.typicode.com/users/${id}`,updContact);\r\n       \r\n     dispatch({type:'UPDATE_CONTACT',payload:res.data});\r\n\r\n\r\n        this.setState({ //clear state\r\n            name:'',\r\n            email:'',\r\n            phone:'',\r\n            errors:{}\r\n        });\r\n        this.props.history.push('/'); //redirect\r\n    };\r\n\r\n    onChange =(e)=> this.setState({[e.target.name]:\r\n        e.target.value});//getter\r\n\r\n    render() {\r\n        \r\n        const {name,email,phone,errors}=this.state;\r\n\r\n       \r\n        return(\r\n            <Consumer>\r\n                {value=>{\r\n                    const {dispatch} = value;\r\n                    return (\r\n                        \r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">\r\n                                Edit Contact\r\n                            </div>\r\n                                <div className=\"card-body\">\r\n                                    <form onSubmit={this.onSubmit.bind(this,dispatch)}>\r\n                                        <TextInputGroup \r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"Enter Name\"\r\n                                        value={name}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.name}\r\n                                        />\r\n                                       \r\n                                         <TextInputGroup \r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        type=\"email\"\r\n                                        placeholder=\"Enter Email\"\r\n                                        value={email}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.email}\r\n                                        />\r\n                                         <TextInputGroup \r\n                                        label=\"Phone\"\r\n                                        name=\"phone\"\r\n                                        placeholder=\"Enter Phone\"\r\n                                        value={phone}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.phone}\r\n                                        />\r\n\r\n                                        \r\n                                        <input type=\"submit\"\r\n                                        value=\"Update Contact\"\r\n                                        className=\"btn btn-success btn-block\"></input>\r\n\r\n                                        \r\n                                    </form>\r\n                                </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n\r\n\r\n        \r\n    }\r\n}\r\n\r\nexport default  EditContact;","import React from 'react';\nimport { HashRouter as Router,Route,Switch} from 'react-router-dom'//stores all of our routes\nimport Contacts from './components/Contacts/Contacts';\nimport Header from './components/Layout/Header';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport {Provider} from './Context';\n\n\n//pages\nimport AddContact from './components/Contacts/AddContact';\nimport About from './components/Pages/About';\nimport NotFound from './components/Pages/NotFound';\nimport Test from './components/test/Test';\nimport EditContact from './components/Contacts/EditContact';\n\n\nimport './App.css';\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\"/>\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" \n                component={Contacts}/>\n                <Route exact path=\"/contact/add\" \n                component={AddContact}/>\n                <Route exact path=\"/contact/edit/:id\"\n                component={EditContact}/>\n                <Route exact path=\"/about\" \n                component={About}/>\n                <Route exact path=\"/test\" \n                component={Test}/>\n                <Route component={NotFound}/>\n              </Switch>\n            </div>\n      \n        </div>\n      </Router>\n         \n    </Provider>\n   \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}